%module valkka_example_module
%include <std_string.i>
%include "cpointer.i" // simple pointer types for c(pp).  We use them for pass-by-reference cases
/* Create some functions for working with "int *" */
%pointer_functions(int, intp);

%{ // this is prepended in the wapper-generated c(pp) file
#define SWIG_FILE_WITH_INIT

#include "framefilter.h"
#include "thread.h"

#include "example_filter.h"

#include <Python.h>

// #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION
// #define PY_ARRAY_UNIQUE_SYMBOL shmem_array_api
// #include "numpy/ndarraytypes.h"
// #include "numpy/arrayobject.h"

%}

%init %{
%}

// Swig should not try to create a default constructor for the following classes as they're abstract (swig interface file should not have the constructors either):
%nodefaultctor FrameFilter;
%nodefaultctor Thread;

%typemap(in) (std::size_t) {
  $1=PyLong_AsSize_t($input);
}

%inline %{  
%}

// next, expose what is necessary
// autogenerate from this point on
